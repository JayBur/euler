package jaybur.euler;

import jaybur.util.StringUtils;

/**
 * The following problem is taken from Project Euler:
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 *
 * @author JayBur
 * @link http://projecteuler.net/problem=002
 * @source https://github.com/JayBur/euler
 */
public class Challenge002 {

	public static int getSumOfEvenFibonacciNumbers(int max) {
		int lastFibbonacci = 2;
		int beforeLastFibonacci = 1;

		int sum = lastFibbonacci;

		int newFibbonacci = 0;

		while ((beforeLastFibonacci + lastFibbonacci) < max) {
			// calc new fibbonacci
			newFibbonacci = beforeLastFibonacci + lastFibbonacci;

			// slide history
			beforeLastFibonacci = lastFibbonacci;
			lastFibbonacci = newFibbonacci;

			// is new fibbonacci even?
			if (newFibbonacci % 2 != 0) {
				continue;
			}

			sum += newFibbonacci;
		}

		return sum;
	}

	public static void main(String[] args) {
		long ms = System.currentTimeMillis();

		int result = getSumOfEvenFibonacciNumbers(4000000);

		long totalTime = System.currentTimeMillis() - ms;

		System.out.println("Result = " + result);
		System.out.println("Total time: " + StringUtils.printTime(totalTime));
	}
}
